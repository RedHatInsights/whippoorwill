---
apiVersion: v1
kind: Secret
metadata:
  name: puptoo
  namespace: test-basic-app
  labels:
    app: puptoo
  ownerReferences:
  - apiVersion: cloud.redhat.com/v1alpha1
    kind: ClowdApp
    name: puptoo
type: Opaque
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: puptoo-processor
  namespace: test-basic-app
spec:
  template:
    spec:
      serviceAccountName: puptoo-processor
      containers:
      - env:
        - name: ENV_VAR_1
          value: "env_var_1"
        - name: ENV_VAR_2
          value: "env_var_2"
        - name: ACG_CONFIG
          value: /cdapp/cdappconfig.json
      initContainers:
      - env:
        - name: ENV_VAR_1
          value: "override_1"
        - name: ENV_VAR_3
          value: "env_var_3"
        - name: ACG_CONFIG
          value: /cdapp/cdappconfig.json
---
apiVersion: v1
kind: Service
metadata:
  name: puptoo-processor
  namespace: test-basic-app
spec:
  selector:
    pod: puptoo-processor
  ports:
  - port: 8000
    targetPort: 8000
    name: public
    appProtocol: http
  - port: 9000
    targetPort: 9000
    name: metrics
    appProtocol: http
---
apiVersion: cloud.redhat.com/v1alpha1
kind: ClowdEnvironment
metadata:
  name: test-basic-app
status:
  apps:
    - name: puptoo
      deployments:
      - hostname: puptoo-processor.test-basic-app.svc
        name: puptoo-processor
        port: 8000
---
apiVersion: v1
data:
  aws_access_key_id: YXdzX2FjY2Vzc19rZXk=
  aws_region: dXMtZWFzdA==
  aws_secret_access_key: YXdzX3NlY3JldF9rZXk=
  bucket: dGVzdC1hcHAtaW50ZXJmYWNlLXMz
  endpoint: dGVzdC1lbmRwb2ludA==
kind: Secret
metadata:
  name: test-basic-app-test-basic-app-clowder-copy
  namespace: test-basic-app
  ownerReferences:
  - apiVersion: cloud.redhat.com/v1alpha1
    controller: true
    kind: ClowdEnvironment
    name: test-basic-app
type: Opaque
---
apiVersion: v1
data:
  aws_access_key_id: YXdzX2FjY2Vzc19rZXk=
  aws_region: dXMtZWFzdA==
  aws_secret_access_key: YXdzX3NlY3JldF9rZXk=
  bucket: dGVzdC1hcHAtaW50ZXJmYWNlLXMz
  endpoint: dGVzdC1lbmRwb2ludA==
kind: Secret
metadata:
  name: test-basic-app-test-basic-app-same-ns-clowder-copy
  namespace: test-basic-app
  ownerReferences:
  - apiVersion: cloud.redhat.com/v1alpha1
    controller: true
    kind: ClowdEnvironment
    name: test-basic-app
type: Opaque
---
apiVersion: v1
imagePullSecrets:
- name: test-basic-app-test-basic-app-clowder-copy
- name: test-basic-app-test-basic-app-same-ns-clowder-copy
kind: ServiceAccount
metadata:
  labels:
    app: puptoo
  name: puptoo-processor
  namespace: test-basic-app
  ownerReferences:
  - apiVersion: cloud.redhat.com/v1alpha1
    controller: true
    kind: ClowdApp
    name: puptoo
---
apiVersion: v1
imagePullSecrets:
- name: test-basic-app-test-basic-app-clowder-copy
- name: test-basic-app-test-basic-app-same-ns-clowder-copy
kind: ServiceAccount
metadata:
  labels:
    app: test-basic-app
  name: test-basic-app-env
  namespace: test-basic-app
  ownerReferences:
  - apiVersion: cloud.redhat.com/v1alpha1
    controller: true
    kind: ClowdEnvironment
    name: test-basic-app
---
apiVersion: v1
kind: Namespace
metadata:
  name: test-basic-app
  labels:
    kubernetes.io/metadata.name: test-basic-app
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: caddy
  namespace: test-basic-app
data:
  Caddyfile: ":8080\n\n    log\n\t\n\treverse_proxy /api/puptoo/* puptoo-processor.test-basic-app.svc:8000\n"
---
apiVersion: v1
kind: Service
metadata:
  name: caddy
  namespace: test-basic-app
spec:
  selector:
    app: test-basic-app
    env-app: caddy
  ports:
  - port: 8080
    targetPort: 8080
    protocol: TCP
    name: gateway
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: caddy
  namespace: test-basic-app
spec:
  selector:
    matchLabels:
      app: test-basic-app
      env-app: caddy
  template:
    metadata:
      labels:
        app: test-basic-app
        env-app: caddy
    spec:
      containers:
      - name: caddy
        image: caddy
        ports:
        - containerPort: 8080
          name: gateway
          protocol: TCP
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /etc/caddy/Caddyfile
          name: config
          subPath: Caddyfile
      volumes:
      - configMap:
          defaultMode: 420
          name: caddy
        name: config
